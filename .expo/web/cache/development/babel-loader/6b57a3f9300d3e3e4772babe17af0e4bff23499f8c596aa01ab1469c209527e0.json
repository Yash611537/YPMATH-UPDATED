{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { Component, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(props) {\n  var navigation = useNavigation();\n  var _props$title = props.title,\n    title = _props$title === void 0 ? 'LOGIN' : _props$title;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../assets/ypmath-logo.png\")\n    }), _jsx(Pressable, {\n      style: styles.boxstyle,\n      children: _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        value: email\n      })\n    }), _jsx(Pressable, {\n      style: styles.boxstyle,\n      children: _jsx(TextInput, {\n        style: styles.textinput,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        value: password,\n        secureTextEntry: true\n      })\n    }), _jsx(Pressable, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttontext,\n        children: title\n      })\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [\"Don't have an account? \", _jsx(Text, {\n        style: styles.linkstyle,\n        children: \"Register here\"\n      })]\n    }), _jsx(Text, {\n      style: styles.linkstyle,\n      children: \"Forgot password?\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  boxstyle: {\n    borderColor: '#D3D3D3',\n    height: '5%',\n    width: '55%',\n    borderWidth: 1,\n    marginTop: 15,\n    marginBottom: 15,\n    elevation: 15,\n    backgroundColor: '#FFFFFF',\n    marginLeft: 20,\n    borderRadius: 10\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 3,\n    backgroundColor: '#FADD66',\n    height: '5%',\n    width: '25%',\n    marginLeft: 20,\n    marginTop: 20,\n    borderColor: 'black',\n    borderStyle: 'solid',\n    borderWidth: 3\n  },\n  buttontext: {\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  container: {\n    flex: 1,\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: '25%',\n    height: '15%',\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    marginBottom: 20\n  },\n  linkstyle: {\n    color: '#4BE2F2',\n    textDecorationLine: 'underline',\n    fontSize: 20\n  },\n  text: {\n    paddingTop: 40,\n    fontSize: 20\n  },\n  textinput: {\n    paddingLeft: 10,\n    paddingTop: 5\n  }\n});","map":{"version":3,"names":["useNavigation","React","Component","useState","auth","Login","props","navigation","title","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","alert","message","styles","container","logo","require","boxstyle","textinput","text","button","buttontext","linkstyle","StyleSheet","create","borderColor","height","width","borderWidth","marginTop","marginBottom","elevation","backgroundColor","marginLeft","borderRadius","alignItems","justifyContent","borderStyle","fontWeight","fontSize","flex","alignContent","resizeMode","alignSelf","color","textDecorationLine","paddingTop","paddingLeft"],"sources":["E:/Projec/YPMath/Screens/login.js"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React, {Component, useState} from \"react\";\r\nimport { Text, TextInput, View, StyleSheet, Image, Button, Pressable } from \"react-native\";\r\nimport { auth } from \"../firebase\";\r\n\r\n\r\nexport default function Login(props) {\r\n    const navigation = useNavigation()\r\n    const {title='LOGIN'} = props;\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const handleLogin = () => {\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(userCredentials => {\r\n                const user = userCredentials.user;\r\n                console.log('Logged in with',user.email)\r\n            })\r\n            .catch(error => alert(error.message))\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            {/* <View style={styles.rectangle}></View>\r\n            <View style={{height: 40,\r\n            width: 300,\r\n            backgroundColor: '#FDE163',\r\n            position: 'relative',\r\n            bottom: 440,\r\n            left: 52}}>\r\n            </View> */}\r\n            <Image\r\n                style= {styles.logo}\r\n                source = {require('../assets/ypmath-logo.png')}\r\n            />\r\n             \r\n            <Pressable style={styles.boxstyle}>\r\n                <TextInput \r\n                    style={styles.textinput} \r\n                    placeholder = \"Email\"\r\n                    onChangeText={text => setEmail(text)}\r\n                    value={email}\r\n                    />\r\n            </Pressable>\r\n            \r\n            <Pressable style={styles.boxstyle}>\r\n                <TextInput \r\n                    style={styles.textinput} \r\n                    placeholder = \"Password\"\r\n                    onChangeText={text => setPassword(text)}\r\n                    value={password}     \r\n                    secureTextEntry               \r\n                />\r\n            </Pressable>\r\n    \r\n            <Pressable style={styles.button} onPress={handleLogin}><Text style={styles.buttontext}>{title}</Text></Pressable>\r\n            <Text style={styles.text}>Don't have an account? <Text style={styles.linkstyle}>Register here</Text></Text>\r\n            <Text style={styles.linkstyle}>Forgot password?</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    boxstyle: {\r\n        borderColor: '#D3D3D3',\r\n        //shadowOffset: 4,\r\n        height: '5%',\r\n        width: '55%',\r\n        borderWidth: 1,\r\n        marginTop: 15,\r\n        marginBottom: 15,\r\n        // shadowOffset: {width: 4, height: 40},  \r\n        // shadowColor: 'yellow',  \r\n        // shadowOpacity: 50,  \r\n        // shadowRadius: 3,\r\n        elevation: 15,\r\n        // borderBottomColor: '#FDE163',\r\n        // borderBottomWidth: 5,\r\n        // borderRightColor: '#FDE163',\r\n        // borderRightWidth: 5,\r\n        backgroundColor: '#FFFFFF',\r\n        marginLeft: 20,\r\n        borderRadius: 10,\r\n\r\n        \r\n    },\r\n    \r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 3,\r\n        backgroundColor: '#FADD66',\r\n        height: '5%',\r\n        width: '25%',\r\n        marginLeft: 20,\r\n        marginTop: 20,\r\n        borderColor: 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: 3\r\n    },\r\n\r\n    buttontext: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18\r\n\r\n    },\r\n\r\n    container: {\r\n        flex:1,\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        //flexDirection: 'row'\r\n    },\r\n\r\n    logo: {\r\n        width: '25%',\r\n        height: '15%',\r\n        resizeMode: 'contain',\r\n        alignSelf: 'center',\r\n        marginBottom: 20\r\n    },\r\n\r\n    linkstyle: {\r\n        color: '#4BE2F2',\r\n        textDecorationLine: 'underline',\r\n        fontSize: 20\r\n    },\r\n\r\n    // rectangle: {\r\n    //     height: 40,\r\n    //     width: 300,\r\n    //     backgroundColor: '#FDE163',\r\n    //     position: 'relative',\r\n    //     bottom: 10,\r\n    //     left: 52\r\n        \r\n    // },\r\n\r\n    text: {\r\n        paddingTop: 40,\r\n        fontSize: 20\r\n    },\r\n\r\n    textinput: {\r\n        paddingLeft: 10,\r\n        paddingTop: 5\r\n    }\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}