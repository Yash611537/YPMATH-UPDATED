{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport firebase from \"firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddQuestion() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    images = _useState2[0],\n    setImages = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    imgName = _useState4[0],\n    setName = _useState4[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      if (Platform.OS !== 'web') {\n        var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n          status = _yield$ImagePicker$re.status;\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n  }, []);\n  var uploadImage = function () {\n    var _ref2 = _asyncToGenerator(function* (uri, imageName) {\n      try {\n        var storageRef = firebase.storage().ref();\n        var imageRef = storageRef.child(\"images/\" + imageName);\n        var response = yield fetch(uri);\n        var blob = yield response.blob();\n        yield imageRef.put(blob);\n        console.log('Image uploaded to Firebase Storage!');\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function uploadImage(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleChoosePhotos = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n        allowsMultipleSelection: true\n      });\n      if (!result.cancelled) {\n        setImages([].concat(_toConsumableArray(images), [result.uri]));\n      }\n    });\n    return function handleChoosePhotos() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var fireUpload = function fireUpload() {\n    uploadImage(images, imgName);\n  };\n  console.log(images);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [images.map(function (image) {\n      return _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: styles.image\n      }, image);\n    }), _jsx(TextInput, {\n      placeholder: \"Add Name of the image\",\n      value: imgName,\n      onChangeText: setName,\n      style: {\n        width: 50\n      }\n    }), _jsx(Button, {\n      title: \"Choose Photos\",\n      onPress: handleChoosePhotos\n    }), _jsx(Button, {\n      title: \"Upload\",\n      onPress: fireUpload\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginBottom: 10\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","ImagePicker","firebase","AddQuestion","images","setImages","imgName","setName","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","uploadImage","uri","imageName","storageRef","storage","ref","imageRef","child","response","fetch","blob","put","console","log","error","handleChoosePhotos","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","allowsMultipleSelection","cancelled","fireUpload","styles","container","map","image","width","StyleSheet","create","flex","justifyContent","alignItems","height","marginBottom"],"sources":["E:/Projec/YPMath/Screens/addQuestion.js"],"sourcesContent":["// import { View, Text } from \"react-native\";\r\n// import React, { useState } from \"react\";\r\n// // import { SelectList } from \"react-native-dropdown-select-list\";\r\n// import { SelectList } from \"react-native-dropdown-select-list\";\r\n// // import firestore from \"@react-native-firebase/firestore\";\r\n// import firebase from \"firebase\";\r\n\r\n// export default function Dropdown() {\r\n//   const [selected, setSelected] = useState(\"\");\r\n\r\n//   const drop = [\r\n//     { key: \"1\", value: \"yash\" },\r\n//     { key: \"2\", value: \"rucha\" },\r\n//     { key: \"3\", value: \"prateeti\" },\r\n//   ];\r\n\r\n//   // Function to upload selected value to Firestore\r\n//   const uploadSelectedValue = async (value) => {\r\n//     try {\r\n//       console.log(drop[value]);\r\n//       await firebase.firestore().collection(\"Question\").doc(\"dropdownMY\").set({\r\n//         selectedValue: value,\r\n//       });\r\n//       console.log(\"Selected value uploaded to Firestore\");\r\n//     } catch (error) {\r\n//       console.log(\"Error uploading selected value to Firestore: \", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={{ paddingHorizontal: 20, paddingVertical: 100, flex: 1 }}>\r\n//       <SelectList\r\n//         data={drop}\r\n//         // setSelected={(value) => {\r\n//         //   setSelected(value);\r\n//         //   uploadSelectedValue(value);\r\n//         // }}\r\n//       />\r\n//     </View>\r\n//   );\r\n// }\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Text, View, Image, Button, StyleSheet, TextInput } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport firebase from \"firebase\";\r\nexport default function AddQuestion() {\r\n    const [images, setImages] = useState([]);\r\n    const [imgName, setName] = useState();\r\n    useEffect(() => {\r\n      (async () => {\r\n        if (Platform.OS !== 'web') {\r\n          const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n          if (status !== 'granted') {\r\n            alert('Sorry, we need camera roll permissions to make this work!');\r\n          }\r\n        }\r\n      })();\r\n    }, []);\r\n    \r\n    const uploadImage = async (uri, imageName) => {\r\n      try {\r\n        const storageRef = firebase.storage().ref();\r\n        const imageRef = storageRef.child(`images/${imageName}`);\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n        await imageRef.put(blob);\r\n        console.log('Image uploaded to Firebase Storage!');\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    const handleChoosePhotos = async () => {\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n        allowsMultipleSelection: true,\r\n      });\r\n  \r\n      if (!result.cancelled) {\r\n        setImages([...images, result.uri]);\r\n        // uploadImage(result.uri, 'imageByYash');\r\n      }\r\n    };\r\n    const fireUpload = ()=> {\r\n      uploadImage(images, imgName);\r\n    }\r\n    console.log(images)\r\n  return (\r\n    <View style={styles.container}>\r\n      {images.map(image => (\r\n        <Image key={image} source={{ uri: image }} style={styles.image} />\r\n      ))}\r\n      <TextInput \r\n        placeholder=\"Add Name of the image\"\r\n        value={imgName}\r\n        onChangeText={setName}\r\n        style={{width:50}}\r\n      ></TextInput>\r\n      <Button title=\"Choose Photos\" onPress={handleChoosePhotos} />\r\n      <Button title=\"Upload\" onPress={fireUpload} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 200,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\n// import { useNavigation } from '@react-navigation/native'\r\n// import React, { Component, useState } from 'react'\r\n// import { Text, StyleSheet, View, TextInput, Pressable } from 'react-native'\r\n\r\n\r\n// export default function ddQuestion()  {\r\n//     const [id, setId] = useState()\r\n//     const navigation = useNavigation()\r\n//     return (\r\n//       <View>\r\n//         <TextInput \r\n//          value={id}\r\n//          onChangeText={(id)=>setId(id)}\r\n//          placeholder='YO'\r\n//          style={styles.textInput}\r\n//         />\r\n//         <Pressable onPress={()=>navigation.navigate(\"AnswerPage\", {\r\n//           paramKey:id\r\n//         })}><Text>Hey</Text></Pressable>        \r\n//       </View>\r\n//     )\r\n//   }\r\n\r\n// const styles = StyleSheet.create({\r\n//   textInput:{\r\n//     width:80\r\n//   }\r\n// })\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}