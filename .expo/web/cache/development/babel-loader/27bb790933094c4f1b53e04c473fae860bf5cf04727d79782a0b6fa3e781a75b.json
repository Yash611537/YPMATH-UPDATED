{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PropTypes from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MenuDrawer = function MenuDrawer(props) {\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  var window = useWindowDimensions();\n  var screenHeight = props.fullSize ? Dimensions.get('screen').height : window.height;\n  var screenWidth = props.fullSize ? Dimensions.get('screen').width : window.width;\n  var initialDrawerWidth = screenWidth * (props.drawerPercentage / 100);\n  var drawerWidthRef = useRef(initialDrawerWidth);\n  var leftOffsetRef = useRef(new Animated.Value(0));\n  useEffect(function () {\n    var newDrawerWidth = screenWidth * (props.drawerPercentage / 100);\n    drawerWidthRef.current = newDrawerWidth;\n    if (props.open) {\n      leftOffsetRef.current = new Animated.Value(determineNewLeftOffset(drawerWidthRef.current));\n    } else {\n      leftOffsetRef.current = new Animated.Value(0);\n    }\n  }, [screenWidth]);\n  var determineNewLeftOffset = function determineNewLeftOffset(drawerWidth) {\n    return props.position === \"left\" ? drawerWidth : -drawerWidth;\n  };\n  useEffect(function () {\n    props.open ? openDrawer() : closeDrawer();\n  }, [props.open]);\n  var openDrawer = function openDrawer() {\n    var drawerPercentage = props.drawerPercentage,\n      animationTime = props.animationTime,\n      opacity = props.opacity;\n    var drawerWidth = drawerWidthRef.current;\n    var leftOffset = leftOffsetRef.current;\n    Animated.parallel([Animated.timing(leftOffset, {\n      toValue: determineNewLeftOffset(drawerWidth),\n      duration: animationTime,\n      useNativeDriver: true\n    }), Animated.timing(fadeAnim, {\n      toValue: opacity,\n      duration: animationTime,\n      useNativeDriver: true\n    })]).start();\n  };\n  var closeDrawer = function closeDrawer() {\n    var drawerPercentage = props.drawerPercentage,\n      animationTime = props.animationTime;\n    var drawerWidth = drawerWidthRef.current;\n    var leftOffset = leftOffsetRef.current;\n    Animated.parallel([Animated.timing(leftOffset, {\n      toValue: 0,\n      duration: animationTime,\n      useNativeDriver: true\n    }), Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: animationTime,\n      useNativeDriver: true\n    })]).start();\n  };\n  var drawerFallback = function drawerFallback() {\n    return _jsx(TouchableOpacity, {\n      onPress: closeDrawer,\n      children: _jsx(Text, {\n        children: \"Close\"\n      })\n    });\n  };\n  var renderPush = function renderPush() {\n    var children = props.children,\n      drawerContent = props.drawerContent,\n      position = props.position,\n      drawerPercentage = props.drawerPercentage;\n    var drawerWidth = drawerWidthRef.current;\n    var leftOffset = leftOffsetRef.current;\n    var animated = {\n      transform: [{\n        translateX: leftOffset\n      }]\n    };\n    return _jsxs(Animated.View, {\n      style: [animated, styles.pushMain, {\n        flexDirection: position === \"left\" ? \"row\" : \"row-reverse\",\n        left: position === \"left\" ? -drawerWidth : 0,\n        height: screenHeight,\n        width: drawerWidth + screenWidth\n      }],\n      children: [_jsx(View, {\n        style: [{\n          height: screenHeight,\n          width: drawerWidth\n        }],\n        children: drawerContent ? drawerContent : drawerFallback()\n      }), _jsx(Animated.View, {\n        style: [{\n          height: screenHeight,\n          width: screenWidth,\n          opacity: fadeAnim\n        }],\n        children: children\n      })]\n    });\n  };\n  var renderOverlay = function renderOverlay() {\n    var children = props.children,\n      position = props.position,\n      drawerContent = props.drawerContent,\n      drawerPercentage = props.drawerPercentage;\n    var drawerWidth = drawerWidthRef.current;\n    var leftOffset = leftOffsetRef.current;\n    var animated = {\n      transform: [{\n        translateX: leftOffset\n      }]\n    };\n    return _jsxs(_Fragment, {\n      children: [_jsx(Animated.View, {\n        style: [animated, styles.drawerOverlay, _defineProperty({\n          height: screenHeight,\n          width: drawerWidth\n        }, position, -drawerWidth)],\n        children: drawerContent ? drawerContent : drawerFallback()\n      }), _jsx(Animated.View, {\n        style: [styles.containerOverlay, {\n          opacity: fadeAnim\n        }],\n        children: children\n      })]\n    });\n  };\n  return props.overlay ? renderOverlay() : renderPush();\n};\nMenuDrawer.defaultProps = {\n  open: false,\n  drawerPercentage: 45,\n  animationTime: 200,\n  overlay: true,\n  opacity: 0.4,\n  position: \"left\",\n  fullSize: false\n};\nMenuDrawer.propTypes = {\n  open: PropTypes.bool,\n  drawerPercentage: PropTypes.number,\n  animationTime: PropTypes.number,\n  overlay: PropTypes.bool,\n  opacity: PropTypes.number,\n  position: PropTypes.oneOf([\"left\", \"right\"]),\n  fullSize: PropTypes.bool\n};\nvar styles = StyleSheet.create({\n  mainPush: {\n    position: \"absolute\",\n    flex: 1\n  },\n  containerOverlay: {\n    flex: 1,\n    elevation: 0,\n    zIndex: 0\n  },\n  drawerOverlay: {\n    position: \"absolute\",\n    elevation: 1,\n    zIndex: 1\n  }\n});\nexport default MenuDrawer;","map":{"version":3,"names":["React","useEffect","useState","useRef","PropTypes","MenuDrawer","props","fadeAnim","Animated","Value","current","window","useWindowDimensions","screenHeight","fullSize","Dimensions","get","height","screenWidth","width","initialDrawerWidth","drawerPercentage","drawerWidthRef","leftOffsetRef","newDrawerWidth","open","determineNewLeftOffset","drawerWidth","position","openDrawer","closeDrawer","animationTime","opacity","leftOffset","parallel","timing","toValue","duration","useNativeDriver","start","drawerFallback","renderPush","children","drawerContent","animated","transform","translateX","styles","pushMain","flexDirection","left","renderOverlay","drawerOverlay","containerOverlay","overlay","defaultProps","propTypes","bool","number","oneOf","StyleSheet","create","mainPush","flex","elevation","zIndex"],"sources":["E:/Projec/YPMath/node_modules/react-native-side-drawer/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\nimport {\n  Animated,\n  useWindowDimensions,\n  StyleSheet,\n  View,\n  Text,\n  Platform,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\"\nimport PropTypes from \"prop-types\"\n\nconst MenuDrawer = props => {\n  const fadeAnim = useRef(new Animated.Value(0)).current\n  const window = useWindowDimensions()\n  const screenHeight = props.fullSize ? Dimensions.get('screen').height : window.height;\n  const screenWidth = props.fullSize?  Dimensions.get('screen').width: window.width;\n\n  const initialDrawerWidth = screenWidth * (props.drawerPercentage / 100)\n  const drawerWidthRef = useRef(initialDrawerWidth)\n\n  const leftOffsetRef = useRef(new Animated.Value(0))\n\n  useEffect(() => {\n    const newDrawerWidth = screenWidth * (props.drawerPercentage / 100)\n    drawerWidthRef.current = newDrawerWidth\n    if (props.open) {\n      leftOffsetRef.current = new Animated.Value(determineNewLeftOffset(drawerWidthRef.current))\n    } else {\n      leftOffsetRef.current = new Animated.Value(0)\n    }\n  }, [screenWidth])\n\n  const determineNewLeftOffset = drawerWidth => {\n    return props.position === \"left\" ? drawerWidth : -drawerWidth\n  }\n\n  useEffect(() => {\n    props.open ? openDrawer() : closeDrawer()\n  }, [props.open])\n\n  const openDrawer = () => {\n    const { drawerPercentage, animationTime, opacity } = props\n    const drawerWidth = drawerWidthRef.current\n    const leftOffset = leftOffsetRef.current\n\n    Animated.parallel([\n      Animated.timing(leftOffset, {\n        toValue: determineNewLeftOffset(drawerWidth),\n        duration: animationTime,\n        useNativeDriver: true\n      }),\n      Animated.timing(fadeAnim, {\n        toValue: opacity,\n        duration: animationTime,\n        useNativeDriver: true\n      })\n    ]).start()\n  }\n\n  const closeDrawer = () => {\n    const { drawerPercentage, animationTime } = props\n    const drawerWidth = drawerWidthRef.current\n    const leftOffset = leftOffsetRef.current\n\n    Animated.parallel([\n      Animated.timing(leftOffset, {\n        toValue: 0,\n        duration: animationTime,\n        useNativeDriver: true\n      }),\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: animationTime,\n        useNativeDriver: true\n      })\n    ]).start()\n  }\n\n  const drawerFallback = () => {\n    return (\n      <TouchableOpacity onPress={closeDrawer}>\n        <Text>Close</Text>\n      </TouchableOpacity>\n    )\n  }\n\n  const renderPush = () => {\n    const { children, drawerContent, position, drawerPercentage } = props\n    const drawerWidth = drawerWidthRef.current\n    const leftOffset = leftOffsetRef.current\n    const animated = { transform: [{ translateX: leftOffset }] }\n\n    return (\n      <Animated.View\n        style={[\n          animated,\n          styles.pushMain,\n          {\n            flexDirection: position === \"left\" ? \"row\" : \"row-reverse\",\n            left: position === \"left\" ? -drawerWidth : 0,\n            height: screenHeight,\n            width: drawerWidth + screenWidth\n          }\n        ]}\n      >\n        <View\n          style={[\n            {\n              height: screenHeight,\n              width: drawerWidth\n            }\n          ]}\n        >\n          {drawerContent ? drawerContent : drawerFallback()}\n        </View>\n        <Animated.View\n          style={[\n            {\n              height: screenHeight,\n              width: screenWidth,\n              opacity: fadeAnim\n            }\n          ]}\n        >\n          {children}\n        </Animated.View>\n      </Animated.View>\n    )\n  }\n\n  const renderOverlay = () => {\n    const { children, position, drawerContent, drawerPercentage } = props\n    const drawerWidth = drawerWidthRef.current\n    const leftOffset = leftOffsetRef.current\n    const animated = { transform: [{ translateX: leftOffset }] }\n\n    return (\n      <>\n        <Animated.View\n          style={[\n            animated,\n            styles.drawerOverlay,\n            { height: screenHeight, width: drawerWidth, [position]: -drawerWidth }\n          ]}\n        >\n          {drawerContent ? drawerContent : drawerFallback()}\n        </Animated.View>\n        <Animated.View style={[styles.containerOverlay, { opacity: fadeAnim }]}>\n          {children}\n        </Animated.View>\n      </>\n    )\n  }\n\n  return props.overlay ? renderOverlay() : renderPush()\n}\n\nMenuDrawer.defaultProps = {\n  open: false,\n  drawerPercentage: 45,\n  animationTime: 200,\n  overlay: true,\n  opacity: 0.4,\n  position: \"left\",\n  fullSize: false\n}\n\nMenuDrawer.propTypes = {\n  open: PropTypes.bool,\n  drawerPercentage: PropTypes.number,\n  animationTime: PropTypes.number,\n  overlay: PropTypes.bool,\n  opacity: PropTypes.number,\n  position: PropTypes.oneOf([\"left\", \"right\"]),\n  fullSize: PropTypes.bool,\n}\n\nconst styles = StyleSheet.create({\n  mainPush: {\n    position: \"absolute\",\n    flex: 1\n  },\n  containerOverlay: {\n    flex: 1,\n    elevation: 0, // better for android\n    zIndex: 0\n  },\n  drawerOverlay: {\n    position: \"absolute\",\n    elevation: 1, // better for android\n    zIndex: 1\n  }\n})\n\nexport default MenuDrawer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}