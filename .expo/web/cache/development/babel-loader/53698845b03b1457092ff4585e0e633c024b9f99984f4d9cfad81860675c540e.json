{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["E:/Projec/YPMath/Screens/addQuestion.js"],"sourcesContent":["// import { View, Text } from \"react-native\";\r\n// import React, { useState } from \"react\";\r\n// // import { SelectList } from \"react-native-dropdown-select-list\";\r\n// import { SelectList } from \"react-native-dropdown-select-list\";\r\n// // import firestore from \"@react-native-firebase/firestore\";\r\n// import firebase from \"firebase\";\r\n\r\n// export default function Dropdown() {\r\n//   const [selected, setSelected] = useState(\"\");\r\n\r\n//   const drop = [\r\n//     { key: \"1\", value: \"yash\" },\r\n//     { key: \"2\", value: \"rucha\" },\r\n//     { key: \"3\", value: \"prateeti\" },\r\n//   ];\r\n\r\n//   // Function to upload selected value to Firestore\r\n//   const uploadSelectedValue = async (value) => {\r\n//     try {\r\n//       console.log(drop[value]);\r\n//       await firebase.firestore().collection(\"Question\").doc(\"dropdownMY\").set({\r\n//         selectedValue: value,\r\n//       });\r\n//       console.log(\"Selected value uploaded to Firestore\");\r\n//     } catch (error) {\r\n//       console.log(\"Error uploading selected value to Firestore: \", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <View style={{ paddingHorizontal: 20, paddingVertical: 100, flex: 1 }}>\r\n//       <SelectList\r\n//         data={drop}\r\n//         // setSelected={(value) => {\r\n//         //   setSelected(value);\r\n//         //   uploadSelectedValue(value);\r\n//         // }}\r\n//       />\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Text, View, Image, Button, StyleSheet, TextInput } from \"react-native\";\r\n// import * as ImagePicker from \"expo-image-picker\";\r\n// import firebase from \"firebase\";\r\n// export default function AddQuestion() {\r\n//     const [images, setImages] = useState([]);\r\n//     const [imgName, setName] = useState();\r\n//     useEffect(() => {\r\n//       (async () => {\r\n//         if (Platform.OS !== 'web') {\r\n//           const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n//           if (status !== 'granted') {\r\n//             alert('Sorry, we need camera roll permissions to make this work!');\r\n//           }\r\n//         }\r\n//       })();\r\n//     }, []);\r\n    \r\n//     const uploadImage = async (uri, imageName) => {\r\n//       try {\r\n//         const storageRef = firebase.storage().ref();\r\n//         const imageRef = storageRef.child(`images/${imageName}`);\r\n//         const response = await fetch(uri);\r\n//         const blob = await response.blob();\r\n//         await imageRef.put(blob);\r\n//         console.log('Image uploaded to Firebase Storage!');\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     }\r\n\r\n//     const handleChoosePhotos = async () => {\r\n//       let result = await ImagePicker.launchImageLibraryAsync({\r\n//         mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n//         allowsEditing: true,\r\n//         aspect: [4, 3],\r\n//         quality: 1,\r\n//         allowsMultipleSelection: true,\r\n//       });\r\n  \r\n//       if (!result.cancelled) {\r\n//         setImages([...images, result.uri]);\r\n//         // uploadImage(result.uri, 'imageByYash');\r\n//       }\r\n//     };\r\n//     const fireUpload = ()=> {\r\n//       uploadImage(images, imgName);\r\n//     }\r\n//     console.log(images)\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       {images.map(image => (\r\n//         <Image key={image} source={{ uri: image }} style={styles.image} />\r\n//       ))}\r\n//       <TextInput \r\n//         placeholder=\"Add Name of the image\"\r\n//         value={imgName}\r\n//         onChangeText={setName}\r\n//         style={{width:50}}\r\n//       ></TextInput>\r\n//       <Button title=\"Choose Photos\" onPress={handleChoosePhotos} />\r\n//       <Button title=\"Upload\" onPress={fireUpload} />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   image: {\r\n//     width: 200,\r\n//     height: 200,\r\n//     marginBottom: 10,\r\n//   },\r\n// });\r\n\r\n// import { useNavigation } from '@react-navigation/native'\r\n// import React, { Component, useState } from 'react'\r\n// import { Text, StyleSheet, View, TextInput, Pressable } from 'react-native'\r\n\r\n\r\n// export default function ddQuestion()  {\r\n//     const [id, setId] = useState()\r\n//     const navigation = useNavigation()\r\n//     return (\r\n//       <View>\r\n//         <TextInput \r\n//          value={id}\r\n//          onChangeText={(id)=>setId(id)}\r\n//          placeholder='YO'\r\n//          style={styles.textInput}\r\n//         />\r\n//         <Pressable onPress={()=>navigation.navigate(\"AnswerPage\", {\r\n//           paramKey:id\r\n//         })}><Text>Hey</Text></Pressable>        \r\n//       </View>\r\n//     )\r\n//   }\r\n\r\n// const styles = StyleSheet.create({\r\n//   textInput:{\r\n//     width:80\r\n//   }\r\n// })\r\n\r\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}